import 'package:clipboard/clipboard.dart';
import 'package:flutter/material.dart';
import 'package:fluttertoast/fluttertoast.dart';
import 'package:get/get.dart';
import 'package:share_plus/share_plus.dart';
import 'package:shayari/View/shyriEdit.dart';

import '../Model/color.dart';

// ignore: must_be_immutable, camel_case_types
class love extends StatelessWidget with color {
  love({super.key, required this.initialPage});

  final int initialPage;

  List<String> los1 = [
    "\n‡§¶‡§ø‡§≤ ‡§ï‡•Ä ‡§ï‡§ø‡§§‡§æ‡§¨ ‡§Æ‡•á‡§Ç ‡§ó‡•Å‡§≤‡§æ‡§¨ ‡§â‡§®‡§ï‡§æ ‡§•‡§æ,\n\t\t\t\t‡§∞‡§æ‡§§ ‡§ï‡•Ä ‡§®‡•Ä‡§Ç‡§¶ ‡§Æ‡•á‡§Ç ‡§ñ‡•ç‡§µ‡§æ‡§¨ ‡§â‡§®‡§ï‡§æ ‡§•‡§æ,\n‡§ï‡§ø‡§§‡§®‡§æ ‡§™‡•ç‡§Ø‡§æ‡§∞ ‡§ï‡§∞‡§§‡•á ‡§π‡•ã ‡§ú‡§¨ ‡§π‡§Æ‡§®‡•á ‡§™‡•Ç‡§õ‡§æ,\n\t\t\t\t‡§Æ‡§∞ ‡§ú‡§æ‡§Ø‡§Ç‡§ó‡•á ‡§§‡•Å‡§Æ‡•ç‡§π‡§æ‡§∞‡•á ‡§¨‡§ø‡§®‡§æ ‡§Ø‡•á ‡§ú‡§¨‡§æ‡§¨ ‡§â‡§®‡§ï‡§æ ‡§•‡§æ......!!!\n",
    "\n‡§Ö‡§™‡§®‡•Ä ‡§∏‡§æ‡§Ç‡§∏‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§Æ‡§π‡§ï‡§§‡§æ ‡§™‡§æ‡§Ø‡§æ ‡§π‡•à ‡§§‡•Å‡§ù‡•á,\n\t\t\t‡§π‡§∞ ‡§ñ‡§µ‡§æ‡§¨ ‡§Æ‡•á ‡§¨‡•Å‡§≤‡§æ‡§Ø‡§æ ‡§π‡•à ‡§§‡•Å‡§ù‡•á,\n\t\t\t‡§ï‡•ç‡§Ø‡•Ç ‡§® ‡§ï‡§∞‡•á ‡§Ø‡§æ‡§¶ ‡§§‡•Å‡§ù ‡§ï‡•ã,\n\t\t\t‡§ú‡§¨ ‡§ñ‡•Å‡§¶‡§æ ‡§®‡•á ‡§π‡§Æ‡§æ‡§∞‡•á ‡§≤‡§ø‡§è ‡§¨‡§®‡§æ‡§Ø‡§æ ‡§π‡•à ‡§§‡•Å‡§ù‡•á........!!!\n",
    "\n‡§™‡•Ç‡§õ‡§§‡•á ‡§•‡•á ‡§®‡§æ ‡§ï‡§ø‡§§‡§®‡§æ ‡§™‡•ç‡§Ø‡§æ‡§∞ ‡§π‡•à ‡§π‡§Æ‡•á‡§Ç ‡§§‡•Å‡§Æ ‡§∏‡•á,\n\t\t\t‡§≤‡•ã ‡§Ö‡§¨ ‡§ó‡§ø‡§® ‡§≤‡•ã‚Ä¶ ‡§Ø‡•á ‡§¨‡•Ç‡§Å‡§¶‡•á‡§Ç ‡§¨‡§æ‡§∞‡§ø‡§∂ ‡§ï‡•Ä‚Ä¶...!!!\n",
    "\n‡§ö‡§æ‡§Ç‡§¶ ‡§∞‡•ã‡§ú‡§º ‡§õ‡§§ ‡§™‡§∞ ‡§Ü‡§ï‡§∞ ‡§á‡§§‡§∞‡§æ‡§§‡§æ ‡§¨‡§π‡•Å‡§§ ‡§•‡§æ,\n\t\t\t‡§ï‡§≤ ‡§∞‡§æ‡§§ ‡§Æ‡•à‡§Ç‡§®‡•á ‡§≠‡•Ä ‡§â‡§∏‡•á ‡§§‡•á‡§∞‡•Ä ‡§§‡§∏‡•ç‡§µ‡•Ä‡§∞ ‡§¶‡§ø‡§ñ‡§æ ‡§¶‡•Ä........!!!\n",
    "\n‡§Ö‡§ú‡•Ä‡§¨ ‡§∏‡•Ä ‡§¨‡•á‡§§‡§æ‡§¨‡•Ä ‡§π‡•à ‡§§‡•á‡§∞‡•á ‡§¨‡§ø‡§®‡§æ,\n\t\t\t‡§∞‡§π ‡§≠‡•Ä ‡§≤‡•á‡§§‡•á ‡§π‡•à ‡§î‡§∞ ‡§∞‡§π‡§æ ‡§≠‡•Ä ‡§®‡§π‡•Ä ‡§ú‡§æ‡§§‡§æ‚Ä¶..!!!\n",
    "\n‡§§‡•Å ‡§Æ‡§ø‡§≤ ‡§ó‡§à ‡§π‡•à ‡§§‡•ã ‡§Æ‡•Å‡§ù ‡§™‡•á ‡§®‡§æ‡§∞‡§æ‡§ú ‡§π‡•à ‡§ñ‡•Å‡§¶‡§æ,\n\t\t\t‡§ï‡§π‡§§‡§æ ‡§π‡•à ‡§ï‡•Ä ‡§§‡•Å ‡§Ö‡§¨ ‡§ï‡•Å‡§õ ‡§Æ‡§æ‡§Å‡§ó‡§§‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à.....!!!\n",
    "\n‡§ñ‡•Å‡§¶‡§æ ‡§ï‡§∞‡•á, ‡§∏‡§≤‡§æ‡§Æ‡§§ ‡§∞‡§π‡•á‡§Ç ‡§¶‡•ã‡§®‡•ã‡§Ç ‡§π‡§Æ‡•á‡§∂‡§æ,\n\t\t\t‡§è‡§ï ‡§§‡•Å‡§Æ ‡§î‡§∞ ‡§¶‡•Ç‡§∏‡§∞‡§æ ‡§Æ‡•Å‡§∏‡•ç‡§ï‡•Å‡§∞‡§æ‡§®‡§æ ‡§§‡•Å‡§Æ‡•ç‡§π‡§æ‡§∞‡§æ.....!!!\n",
    "\n‡§§‡§Æ‡•ç‡§Æ‡§®‡§æ ‡§π‡•ã ‡§Æ‡§ø‡§≤‡§®‡•á ‡§ï‡•Ä ‡§§‡•ã,\n\t\t\t‡§¨‡§Ç‡§¶ ‡§Ü‡§Å‡§ñ‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§≠‡•Ä ‡§®‡•õ‡§∞ ‡§Ü‡§è‡§Ç‡§ó‡•á,\n‡§Æ‡§π‡§∏‡•Ç‡§∏ ‡§ï‡§∞‡§®‡•á ‡§ï‡•Ä ‡§§‡•ã ‡§ï‡•ã‡§∂‡§ø‡§∂ ‡§ï‡•Ä‡§ú‡§ø‡§è,\n\t\t\t‡§¶‡•Ç‡§∞ ‡§π‡•ã‡§§‡•á ‡§π‡•Å‡§è ‡§≠‡•Ä ‡§™‡§æ‡§∏ ‡§®‡§ú‡§∞ ‡§Ü‡§è‡§Ç‡§ó‡•á !\n",
    "\n‡§®‡§æ ‡§ö‡§æ‡§Ç‡§¶ ‡§ï‡•Ä ‡§ö‡§æ‡§π‡§§ ‡§®‡§æ ‡§∏‡§ø‡§§‡§æ‡§∞‡•ã‡§Ç ‡§ï‡•Ä ‡§´‡§∞‡§Æ‡§æ‡§á‡§∂,\n\t\t\t‡§π‡§∞ ‡§ú‡§®‡•ç‡§Æ ‡§Æ‡•á‡§Ç ‡§§‡•Ç ‡§Æ‡§ø‡§≤‡•á ‡§Æ‡•á‡§∞‡•Ä ‡§¨‡§∏ ‡§Ø‡§π‡•Ä ‡§ñ‡•ç‡§µ‡§æ‡§π‡§ø‡§∂ !\n",
    "\n‡§≤‡•ã‡§ó ‡§Ö‡§ï‡•ç‡§∏‡§∞ ‡§™‡•Ç‡§õ‡§§‡•á ‡§π‡•à‡§Ç ‡§Æ‡•á‡§∞‡•Ä ‡§ñ‡•Å‡§∂‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡§æ ‡§∞‡§æ‡§ú,\n\t\t\t‡§á‡§ú‡§æ‡§ú‡§§ ‡§¶‡•ã ‡§§‡•ã ‡§Ü‡§™‡§ï‡§æ ‡§®‡§æ‡§Æ ‡§¨‡§§‡§æ ‡§¶‡•Ç‡§Ç !\n",
    "\n‡§∂‡§æ‡§® ‡§∏‡•á ‡§π‡§Æ ‡§§‡•á‡§∞‡•á ‡§¶‡§ø‡§≤ ‡§Æ‡•á‡§Ç ‡§∞‡§π‡•á‡§Ç‡§ó‡•á,\n\t\t\t‡§§‡•á‡§∞‡•Ä ‡§Æ‡•ã‡§π‡§¨‡•ç‡§¨‡§§ ‡§™‡•á ‡§ú‡§æ‡§® ‡§®‡§ø‡§∏‡§æ‡§∞ ‡§ï‡§∞‡•á‡§Ç‡§ó‡•á,\n‡§¶‡•á‡§ñ ‡§ï‡•á ‡§ú‡§≤‡•á‡§Ç‡§ó‡•Ä ‡§π‡§Æ‡•á ‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§∏‡§æ‡§∞‡•Ä,\n\t\t\t‡§á‡§∏ ‡§ï‡§¶‡§∞ ‡§¨‡•á-‡§™‡§®‡§æ‡§π ‡§§‡•Å‡§ù‡•á ‡§™‡•ç‡§Ø‡§æ‡§∞ ‡§ï‡§∞‡•á‡§Ç‡§ó‡•á......!!!\n",
    "\n‡§§‡•á‡§∞‡•á ‡§ö‡•á‡§π‡§∞‡•á ‡§™‡§∞ ‡§Ö‡§∂‡•ç‡§ï‡•ã‡§Ç ‡§ï‡•Ä ‡§≤‡§ï‡•Ä‡§∞ ‡§¨‡§® ‡§ó‡§Ø‡•Ä,\n\t\t\t‡§ú‡•ã ‡§® ‡§∏‡•ã‡§ö‡§æ ‡§•‡§æ ‡§§‡•Ç ‡§µ‡•ã ‡§§‡•ò‡§¶‡•Ä‡§∞ ‡§¨‡§® ‡§ó‡§Ø‡•Ä......!!!\n",
  ];

  @override
  Widget build(BuildContext context) {
    final controller = PageController(initialPage: initialPage, keepPage: true);
    int currentIndex = initialPage;
    return Scaffold(
      appBar: AppBar(
        backgroundColor: loAppBack,
        centerTitle: true,
        title: Text(
          "‡§™‡•ç‡§∞‡•á‡§Æ-‡§≠‡§∞‡•Ä ‡§∂‡§æ‡§Ø‡§∞‡•Ä üíï",
          style: TextStyle(
              fontSize: 25, color: lobar, fontWeight: FontWeight.w800),
        ),
        actions: [
          IconButton(onPressed: () {}, icon: const Icon(Icons.share)),
          IconButton(
              onPressed: () {}, icon: const Icon(Icons.more_vert_outlined)),
        ],
      ),
      backgroundColor: loSBack,
      body: Stack(children: [
        Positioned(
          right: 0,
          top: -25,
          left: 0,
          child: Container(
            margin: const EdgeInsetsDirectional.fromSTEB(20, 50, 20, 50),
            decoration: BoxDecoration(
                borderRadius: BorderRadius.circular(10), color: custo),
            height: 50,
            child: const Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              crossAxisAlignment: CrossAxisAlignment.stretch,
              children: [
                Icon(Icons.fullscreen_outlined),
                Icon(Icons.refresh_outlined),
              ],
            ),
          ),
        ),
        PageView.builder(
          scrollDirection: Axis.horizontal,
          itemCount: los1.length,
          controller: controller,
          itemBuilder: (context, index) {
            return Column(
              mainAxisAlignment: MainAxisAlignment.center,
              crossAxisAlignment: CrossAxisAlignment.stretch,
              children: [
                SizedBox(
                  height: 450,
                  child: Card(
                      color: locard,
                      margin: const EdgeInsetsDirectional.fromSTEB(20, 60, 20, 0),
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                        crossAxisAlignment: CrossAxisAlignment.stretch,
                        children: [
                          Expanded(
                            child: Container(
                              margin: const EdgeInsetsDirectional.fromSTEB(
                                  20, 20, 20, 20),
                              decoration: BoxDecoration(
                                borderRadius: BorderRadius.circular(30),
                                color: loBodr,
                              ),
                              child: ListTile(
                                title: Center(
                                    child: Text(
                                  los1[index],
                                  overflow: TextOverflow.clip,
                                  style: const TextStyle(
                                      fontSize: 20,
                                      fontWeight: FontWeight.w600,
                                      color: Colors.brown),
                                )),
                                mouseCursor: MouseCursor.defer,
                                hoverColor: hover,
                                focusColor: focus,
                              ),
                            ),
                          ),
                        ],
                      )),
                ),
              ],
            );
          },
        ),
      ]),
      bottomNavigationBar: Container(
        height: 50,
        margin: const EdgeInsetsDirectional.fromSTEB(20, 0, 20, 20),
        decoration: BoxDecoration(
          borderRadius: BorderRadius.circular(10),
          color: custo,
        ),
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceEvenly,
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            SizedBox(
              height: 90,
              child: Material(
                  color: Colors.transparent,
                  child: GestureDetector(
                      onTap: () {
                        FlutterClipboard.copy(los1[currentIndex]).then((value) {
                          Fluttertoast.showToast(
                              msg: "copied",
                              toastLength: Toast.LENGTH_SHORT,
                              gravity: ToastGravity.CENTER,
                              timeInSecForIosWeb: 1,
                              backgroundColor: Colors.red,
                              textColor: Colors.white,
                              fontSize: 16.0);
                        });
                      },
                      child: const Icon(Icons.copy_all_rounded))),
            ),
            IconButton(
                onPressed: () {
                  controller.previousPage(
                      duration: const Duration(seconds: 1),
                      curve: Curves.easeInOut);
                },
                icon: const Icon(Icons.keyboard_double_arrow_left)),
            IconButton(
                onPressed: () {
                  Get.to(shyriEdit(
                      editShayari: los1[initialPage].toString(),
                      index: initialPage));
                },
                icon: const Icon(Icons.edit_off)),
            IconButton(
                onPressed: () {
                  controller.nextPage(
                      duration: const Duration(seconds: 1),
                      curve: Curves.easeInOut);
                },
                icon: const Icon(Icons.keyboard_double_arrow_right)),
            IconButton(
              onPressed: () {
                Share.share(los1[currentIndex]);
              },
                icon: const Icon(Icons.share)),
          ],
        ),
      ),
    );
  }
}

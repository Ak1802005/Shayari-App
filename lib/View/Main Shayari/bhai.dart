import 'package:clipboard/clipboard.dart';
import 'package:flutter/material.dart';
import 'package:fluttertoast/fluttertoast.dart';
import 'package:get/get.dart';
import 'package:share_plus/share_plus.dart';
import 'package:shayari/View/shyriEdit.dart';

import '../../Model/color.dart';


// ignore: must_be_immutable, camel_case_types
class Bhai extends StatelessWidget with color {
  Bhai({super.key, required this.initialPage});

  final int initialPage;

  List<String> los4 = [
    "‡§≤‡§ñ‡§® ‡§ï‡•ã ‡§ú‡•à‡§∏‡•á ‡§∞‡§æ‡§Æ ‡§Æ‡§ø‡§≤‡•á ‡§¨‡§≤‡§∞‡§æ‡§Æ ‡§ï‡•ã ‡§ï‡•É‡§∑‡•ç‡§£ ‡§≠‡§æ‡§à\n\t\t\t\t‡§Æ‡•Å‡§ù‡§ï‡•ã‡§Ç ‡§ê‡§∏‡•á ‡§π‡•Ä ‡§á‡§∏ ‡§ú‡§π‡§æ‡§Å ‡§Æ‡•á‡§Ç ‡§Æ‡§ø‡§≤‡•á ‡§π‡•à ‡§Æ‡•á‡§∞‡•á ‡§™‡•ç‡§Ø‡§æ‡§∞‡•á ‡§¨‡•ú‡•á ‡§≠‡§æ‡§à",
    "‡§Æ‡•á‡§∞‡•Ä ‡§Æ‡•Å‡§∏‡•Ä‡§¨‡§§‡•ã‡§Ç ‡§ï‡•ã ‡§ú‡•ã ‡§Ö‡§™‡§®‡§æ ‡§∏‡§Æ‡§ù,\n\t\t\t\t‡§π‡§∞ ‡§µ‡§ï‡•ç‡§§ ‡§Ü‡§ó‡•á ‡§Ü‡§ï‡§∞ ‡§Ö‡§™‡§®‡§æ ‡§∏‡§∞ ‡§≤‡•á‡§§‡§æ ‡§π‡•à,\n‡§Ø‡§æ‡§∞ ‡§µ‡•ã ‡§ï‡•ã‡§à ‡§î‡§∞ ‡§®‡§π‡•Ä‡§Ç ‡§≠‡§æ‡§à ‡§π‡•ã‡§§‡§æ ‡§π‡•à !",
    "‡§§‡§®‡•ç‡§π‡§æ ‡§µ‡§π ‡§®‡§π‡•Ä ‡§∞‡§π‡§§‡§æ ‡§π‡•à,\n\t\t\t\t‡§ú‡§ø‡§∏‡§ï‡•á ‡§∏‡§ø‡§∞ ‡§™‡§∞ ‡§¨‡§°‡§º‡•á ‡§≠‡§æ‡§à ‡§ï‡§æ ‡§π‡§æ‡§• ‡§π‡•ã‡§§‡§æ ‡§π‡•à,\n‡§ñ‡•Å‡§∂ ‡§µ‡§π‡•Ä ‡§∞‡§π‡§§‡§æ ‡§π‡•à,\n\t\t\t\t‡§ú‡§ø‡§∏‡§ï‡§æ ‡§¶‡•ã‡§∏‡•ç‡§§ ‡§ú‡•à‡§∏‡§æ ‡§¨‡§°‡§º‡§æ ‡§≠‡§æ‡§à ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§",
    "‡§≠‡§æ‡§à ‡§Æ‡•á‡§∞‡•Ä ‡§π‡§ø‡§Æ‡•ç‡§Æ‡§§ ‡§π‡•à, ‡§Æ‡•á‡§∞‡§æ ‡§µ‡•ã ‡§∏‡§π‡§æ‡§∞‡§æ ‡§π‡•à,\n\t\t\t\t‡§µ‡•ã ‡§Ö‡§™‡§®‡§æ ‡§Æ‡•Å‡§ù‡•á ‡§Æ‡•á‡§∞‡•Ä ‡§ú‡§æ‡§® ‡§∏‡•á ‡§≠‡•Ä ‡§™‡•ç‡§Ø‡§æ‡§∞‡§æ ‡§π‡•à‡•§",
    "‡§≠‡§æ‡§á‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§™‡•ç‡§∞‡•á‡§Æ ‡§ï‡•ã ‡§ï‡§Æ ‡§ï‡§∞ ‡§¶‡•á,\n\t\t\t\t‡§ï‡§ø‡§∏‡•Ä ‡§Æ‡•á‡§Ç ‡§á‡§§‡§®‡•Ä ‡§§‡§æ‡§ï‡§§ ‡§®‡§π‡•Ä‡§Ç,\n‡§≠‡§æ‡§à ‡§π‡§Æ‡§æ‡§∞‡•á ‡§¶‡§ø‡§≤ ‡§ï‡•Ä ‡§Ü‡§µ‡§æ‡§ú ‡§π‡•à,\n\t\t\t\t‡§π‡§Æ‡§æ‡§∞‡§æ ‡§™‡•ç‡§∞‡•á‡§Æ ‡§π‡•ã‡§ó‡§æ ‡§ï‡§≠‡•Ä ‡§≠‡•Ä ‡§ï‡§Æ ‡§®‡§π‡•Ä‡§Ç‡•§",
    "‡§™‡•ç‡§Ø‡§æ‡§∞ ‡§Æ‡•ã‡§π‡§¨‡•ç‡§¨‡§§ ‡§ï‡§æ ‡§ú‡§ø‡§∏ ‡§∏‡•á\n\t\t\t\t‡§è‡§ï ‡§Ö‡§≤‡§ó ‡§π‡•Ä ‡§∞‡§ø‡§∂‡•ç‡§§‡§æ ‡§π‡•ã‡§§‡§æ ‡§π‡•à,\n‡§µ‡•ã ‡§≠‡§æ‡§à ‡§¨‡§∏ ‡§≠‡§æ‡§à ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã‡§§‡§æ\n\t\t\t\t‡§è‡§ï ‡•û‡§∞‡§ø‡§∂‡•ç‡§§‡§æ ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§",
    "‡§ú‡§¨ ‡§≠‡§æ‡§à-‡§≠‡§æ‡§à ‡§Æ‡•á‡§Ç ‡§™‡•ç‡§∞‡•á‡§Æ ‡§ï‡•Ä ‡§®‡•Ä‡§µ ‡§™‡§ï‡•ç‡§ï‡•Ä ‡§π‡•ã‡§§‡•Ä ‡§π‡•à,\n\t\t\t\t‡§§‡•ã ‡§ò‡§∞ ‡§ï‡•Ä ‡§¨‡•ú‡•Ä ‡§π‡•Ä ‡§§‡§∞‡§ï‡•ç‡§ï‡•Ä ‡§π‡•ã‡§§‡•Ä ‡§π‡•à.",
    "‡§∏‡§Ç‡§ó ‡§∞‡§π‡§§‡§æ ‡§π‡•à‡§Ç ‡§ú‡•ã ‡§π‡§∞ ‡§™‡§≤\n\t\t\t\t‡§¶‡•Ç‡§∞ ‡§è‡§ï ‡§ï‡•ç‡§∑‡§£ ‡§ï‡•ã‡§Ç ‡§≠‡•Ä ‡§®‡§æ ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡§Ç,\n‡§µ‡•ã‡§Ç ‡§Ø‡§æ‡§∞ ‡§∏‡§ø‡§∞‡•ç‡§´ ‡§¶‡•ã‡§∏‡•ç‡§§ ‡§®‡§π‡•Ä,\n\t\t\t\t‡§™‡§∞‡§®‡•ç‡§§‡•Å ‡§è‡§ï ‡§≠‡§æ‡§à ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡§Ç‡•§",
    "‡§ò‡§∞ ‡§Æ‡•á‡§Ç ‡§ú‡§¨ ‡§ï‡•ã‡§à ‡§Ü‡§™‡§ï‡•á ‡§∏‡§æ‡§• ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã‡§§‡§æ,\n\t\t\t\t‡§≠‡§æ‡§à ‡§§‡§¨ ‡§≠‡•Ä ‡§Ü‡§™‡§ï‡•á ‡§∏‡§æ‡§• ‡§ñ‡•ú‡§æ ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡§Ç ‚Ä¶ ‡•§‡•§",
    "‡§ñ‡•Ç‡§¨‡§∏‡•Ç‡§∞‡§§ ‡§è‡§ï ‡§∞‡§ø‡§∂‡•ç‡§§‡§æ ‡§§‡•á‡§∞‡§æ ‡§Æ‡•á‡§∞‡§æ ‡§π‡•à,\n\t\t\t\t‡§ú‡§ø‡§∏ ‡§™‡§∞ ‡§ñ‡•Å‡§∂‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡§æ ‡§™‡§π‡§∞‡§æ ‡§π‡•à,\n‡§®‡•õ‡§∞ ‡§® ‡§≤‡§ó‡•á ‡§ï‡§≠‡•Ä ‡§á‡§∏ ‡§∞‡§ø‡§∂‡•ç‡§§‡•á ‡§ï‡•ã,\n\t\t\t\t‡§ï‡•ç‡§Ø‡•Å‡§ï‡•Ä ‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§ï‡§æ ‡§∏‡§¨‡§∏‡•á ‡§™‡•ç‡§Ø‡§æ‡§∞‡§æ ‡§≠‡§æ‡§à ‡§Æ‡•á‡§∞‡§æ ‡§π‡•à‡•§",
    "‡§™‡§æ‡§∏ ‡§®‡§π‡•Ä‡§Ç ‡§§‡•ã ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•Å‡§Ü,\n\t\t\t\t‡§Æ‡•á‡§∞‡§æ ‡§≠‡§æ‡§à ‡§Æ‡•á‡§∞‡•á ‡§¶‡§ø‡§≤ ‡§ï‡•á ‡§ï‡§∞‡•Ä‡§¨ ‡§π‡•à‡§Ç‡•§",
    "‡§Æ‡•á‡§∞‡§æ ‡§≠‡§æ‡§à ‡§Æ‡•á‡§∞‡§æ ‡§Ø‡§æ‡§∞ ‡§π‡•à,\n\t\t\t\t‡§î‡§∞ ‡§ú‡§ø‡§∏‡§ï‡•á ‡§™‡§æ‡§∏ ‡§∏‡§ö‡•ç‡§ö‡§æ ‡§Ø‡§æ‡§∞ ‡§π‡•à,\n‡§â‡§∏‡§ï‡•á ‡§™‡§æ‡§∏ ‡§∏‡§æ‡§∞‡§æ ‡§∏‡§Ç‡§∏‡§æ‡§∞ ‡§π‡•à‡•§"
  ];

  @override
  Widget build(BuildContext context) {
    final controller = PageController(initialPage: initialPage, keepPage: true);
    int currentIndex = initialPage;
    return Scaffold(
      appBar: AppBar(
        backgroundColor: loAppBack,
        centerTitle: true,
        title: Text(
          "‡§≠‡§æ‡§à ‡§∂‡§æ‡§Ø‡§∞‡•Ä üë¨üèª",
          style: TextStyle(
              fontSize: 25, color: lobar, fontWeight: FontWeight.w800),
        ),
        actions: [
          IconButton(onPressed: () {}, icon: const Icon(Icons.share)),
          IconButton(
              onPressed: () {}, icon: const Icon(Icons.more_vert_outlined)),
        ],
      ),
      backgroundColor: loSBack,
      body: Stack(children: [
        Positioned(
          right: 0,
          top: -25,
          left: 0,
          child: Container(
            margin: const EdgeInsetsDirectional.fromSTEB(20, 50, 20, 50),
            decoration: BoxDecoration(
                borderRadius: BorderRadius.circular(10), color: custo),
            height: 50,
            child: const Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              crossAxisAlignment: CrossAxisAlignment.stretch,
              children: [
                Icon(Icons.fullscreen_outlined),
                Icon(Icons.refresh_outlined),
              ],
            ),
          ),
        ),
        PageView.builder(
          scrollDirection: Axis.horizontal,
          itemCount: los4.length,
          controller: controller,
          itemBuilder: (context, index) {
            return Column(
              mainAxisAlignment: MainAxisAlignment.center,
              crossAxisAlignment: CrossAxisAlignment.stretch,
              children: [
                SizedBox(
                  height: 450,
                  child: Card(
                      color: locard,
                      margin: const EdgeInsetsDirectional.fromSTEB(20, 60, 20, 0),
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                        crossAxisAlignment: CrossAxisAlignment.stretch,
                        children: [
                          Expanded(
                            child: Container(
                              margin: const EdgeInsetsDirectional.fromSTEB(
                                  20, 20, 20, 20),
                              decoration: BoxDecoration(
                                borderRadius: BorderRadius.circular(30),
                                color: loBodr,
                              ),
                              child: ListTile(
                                title: Center(
                                    child: Text(
                                      los4[index],
                                      overflow: TextOverflow.clip,
                                      style: const TextStyle(
                                          fontSize: 20,
                                          fontWeight: FontWeight.w600,
                                          color: Colors.brown),
                                    )),
                                mouseCursor: MouseCursor.defer,
                                hoverColor: hover,
                                focusColor: focus,
                              ),
                            ),
                          ),
                        ],
                      )),
                ),
              ],
            );
          },
        ),
      ]),
      bottomNavigationBar: Container(
        height: 50,
        margin: const EdgeInsetsDirectional.fromSTEB(20, 0, 20, 20),
        decoration: BoxDecoration(
          borderRadius: BorderRadius.circular(10),
          color: custo,
        ),
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceEvenly,
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            SizedBox(
              height: 90,
              child: Material(
                  color: Colors.transparent,
                  child: GestureDetector(
                      onTap: () {
                        FlutterClipboard.copy(los4[currentIndex]).then((value) {
                          Fluttertoast.showToast(
                              msg: "copied",
                              toastLength: Toast.LENGTH_SHORT,
                              gravity: ToastGravity.CENTER,
                              timeInSecForIosWeb: 1,
                              backgroundColor: Colors.red,
                              textColor: Colors.white,
                              fontSize: 16.0);
                        });
                      },
                      child: const Icon(Icons.copy_all_rounded))),
            ),
            IconButton(
                onPressed: () {
                  controller.previousPage(
                      duration: const Duration(seconds: 1),
                      curve: Curves.easeInOut);
                },
                icon: const Icon(Icons.keyboard_double_arrow_left)),
            IconButton(
                onPressed: () {
                  Get.to(shyriEdit(
                      editShayari: los4[initialPage].toString(),
                      index: initialPage));
                },
                icon: const Icon(Icons.edit_off)),
            IconButton(
                onPressed: () {
                  controller.nextPage(
                      duration: const Duration(seconds: 1),
                      curve: Curves.easeInOut);
                },
                icon: const Icon(Icons.keyboard_double_arrow_right)),
            IconButton(
                onPressed: () {
                  Share.share(los4[currentIndex]);
                },
                icon: const Icon(Icons.share)),
          ],
        ),
      ),
    );
  }
}

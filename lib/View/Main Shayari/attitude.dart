import 'package:clipboard/clipboard.dart';
import 'package:flutter/material.dart';
import 'package:fluttertoast/fluttertoast.dart';
import 'package:get/get.dart';
import 'package:share_plus/share_plus.dart';
import 'package:shayari/View/shyriEdit.dart';

import '../../Model/color.dart';


// ignore: must_be_immutable, camel_case_types
class Attitude extends StatelessWidget with color {
  Attitude({super.key, required this.initialPage});

  final int initialPage;

  List<String> los4 = [
    "‡§¨‡§æ‡§¶‡§∂‡§æ‡§π ‡§π‡•ã ‡§Ø‡§æ ‡§Æ‡§æ‡§≤‡§ø‡§ï ‡§∏‡§≤‡§æ‡§Æ‡•Ä ‡§π‡§Æ ‡§®‡§π‡•Ä ‡§ï‡§∞‡§§‡•á\n\t\t\t\t‡§™‡•à‡§∏‡•á ‡§π‡•ã ‡§Ø‡§æ ‡§ï‡•ã‡§à ‡§∞‡§æ‡§ú‡§ï‡•Å‡§Æ‡§æ‡§∞‡•Ä ‡§ó‡•Å‡§≤‡§æ‡§Æ‡•Ä ‡§π‡§Æ ‡§®‡§π‡•Ä ‡§ï‡§∞‡§§‡•á",
    "‡§Æ‡•á‡§∞‡•á ‡§™‡§æ‡§∏ ‡§ú‡•Å‡§®‡•Ç‡§® ‡§π‡•à ‡§§‡§≠‡•Ä ‡§§‡•ã\n\t\t\t\t‡§§‡•á‡§∞‡§æ ‡§ó‡•Å‡§∞‡•Å‡§∞ ‡§Æ‡•á‡§∞‡•á ‡§∏‡§æ‡§Æ‡§®‡•á ‡§ö‡§ï‡§®‡§æ‡§ö‡•Ç‡§∞ ‡§π‡•à",
    "‡§´‡§∞‡•ç‡§ï ‡§¨‡§π‡•Å‡§§ ‡§π‡•à ‡§§‡•á‡§∞‡•Ä ‡§î‡§∞ ‡§Æ‡•á‡§∞‡•Ä ‡§§‡§æ‡§≤‡•Ä‡§Æ ‡§Æ‡•á‡§Ç\n\t\t\t\t‡§§‡•Ç‡§®‡•á ‡§â‡§∏‡•ç‡§§‡§æ‡§¶‡•ã‡§Ç ‡§∏‡•á ‡§∏‡•Ä‡§ñ‡§æ ‡§π‡•à ‡§î‡§∞ ‡§Æ‡•à‡§Ç‡§®‡•á ‡§π‡§æ‡§≤‡§æ‡§§‡•ã ‡§∏‡•á",
    "‡§∏‡•Ä‡§ß‡§æ ‡§∏‡§æ‡§¶‡§æ ‡§∏‡§Æ‡§ù ‡§ï‡§∞ ‡§§‡§∞‡§∏ ‡§Æ‡§§ ‡§ñ‡§æ,\n\t\t\t\t‡§Æ‡•à‡§Ç ‡§µ‡•ã ‡§π‡•Ç‡§Å ‡§ú‡•ã ‡§≤‡•ã‡§ó‡•ã ‡§ï‡•ã ‡§§‡§∞‡§∏‡§æ ‡§¶‡•á‡§§‡§æ ‡§π‡•à‡•§ ",
    "‡§Ö‡§™‡§®‡•á ‡§ö‡•á‡§π‡§∞‡•á ‡§ï‡•Ä ‡§¨‡§®‡§æ‡§µ‡§ü ‡§∏‡•á ‡§≠‡•Ä ‡§°‡§∞ ‡§ó‡§Ø‡§æ,\n\t\t\t\t‡§µ‡•ã ‡§Æ‡•Å‡§ù ‡§∏‡•á ‡§ü‡§ï‡§∞‡§æ‡§Ø‡§æ ‡§î‡§∞ ‡§¨‡§ø‡§ñ‡§∞ ‡§ó‡§Ø‡§æ‡•§ ",
    "‡§Æ‡•Å‡§ù‡§∏‡•á ‡§®‡§´‡§∞‡§§ ‡§ï‡§∞‡§®‡•á ‡§µ‡§æ‡§≤‡•á ‡§≤‡•ã‡§ó ‡§Æ‡•á‡§∞‡•Ä ‡§ï‡§æ‡§Æ‡§Ø‡§æ‡§¨‡•Ä ‡§∏‡•á ‡§ú‡§≤‡§§‡•á ‡§π‡•à‡§Ç,\n\t\t\t\t‡§ê‡§∏‡•á ‡§≤‡•ã‡§ó‡•ã ‡§ï‡•á ‡§Ü‡§ó‡•á, ‡§π‡§Æ ‡§∏‡•Ä‡§®‡§æ ‡§§‡§æ‡§® ‡§ï‡•á ‡§ö‡§≤‡§§‡•á ‡§π‡•à‡§Ç‡•§ ",
    "‡§ú‡§æ‡§®‡§æ ‡§π‡•à ‡§§‡•ã ‡§ú‡§æ‡§ì ‡§Ü‡§ñ‡§ø‡§∞ ‡§∞‡•ã‡§ï‡§æ ‡§ï‡§ø‡§∏‡§®‡•á ‡§π‡•à,\n\t\t\t\t‡§Æ‡•à‡§Ç ‡§§‡•ã ‡§Ö‡§≤‡§ó ‡§ñ‡§°‡§º‡§æ ‡§π‡•Ç‡§Å ‡§§‡•Å‡§Æ‡§ï‡•ã ‡§ü‡•ã‡§ï‡§æ ‡§ï‡§ø‡§∏‡§®‡•á ‡§π‡•à‡•§ ",
    "‡§ú‡•ã ‡§™‡•ç‡§Ø‡§æ‡§∞ ‡§∏‡•á ‡§∞‡§π‡•á ‡§â‡§∏‡•á ‡§™‡•ç‡§Ø‡§æ‡§∞ ‡§¶‡•á‡§§‡•á ‡§π‡•à‡§Ç,\n\t\t\t\t‡§ú‡•ç‡§Ø‡§æ‡§¶‡§æ ‡§â‡§õ‡§≤ ‡§ï‡•Ç‡§¶ ‡§ï‡§∞‡•á ‡§§‡•ã ‡§∏‡•Å‡§ß‡§æ‡§∞ ‡§¶‡•á‡§§‡•á ‡§π‡•à‡§Ç‡•§ ",
    "‡§∂‡§ø‡§ï‡§æ‡§∞‡•Ä ‡§§‡•ã ‡§π‡§Æ ‡§Ü‡§™‡§∏‡•á ‡§≠‡•Ä ‡§¨‡§π‡•Å‡§§ ‡§¨‡§°‡§º‡•á ‡§π‡•à‡§Ç,\n\t\t\t\t‡§≤‡•á‡§ï‡§ø‡§® ‡§π‡§Æ‡§®‡•á ‡§ï‡§≠‡•Ä ‡§ï‡•Å‡§§‡•ç‡§§‡•ã‡§Ç ‡§ï‡§æ ‡§∂‡§ø‡§ï‡§æ‡§∞ ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§ø‡§Ø‡§æ",
    "‡§Æ‡•à‡§Ç ‡§µ‡•ã ‡§π‡•Ç‡§Ç ‡§ú‡•ã ‡§Ü‡§™ ‡§∏‡•ã‡§ö ‡§≠‡•Ä ‡§®‡§π‡•Ä‡§Ç ‡§∏‡§ï‡§§‡•á,\n\t\t\t\t‡§≤‡•á‡§ï‡§ø‡§® ‡§Æ‡•à‡§Ç ‡§µ‡•ã ‡§¨‡§ø‡§≤‡•ç‡§ï‡•Å‡§≤ ‡§≠‡•Ä ‡§®‡§π‡•Ä‡§Ç ‡§π‡•Ç‡§Ç ‡§ú‡•ã ‡§Ü‡§™ ‡§Æ‡•Å‡§ù‡•á ‡§∏‡•ã‡§ö‡§§‡•á ‡§π‡•à‡§Ç",
    "‡§ù‡•Ç‡§†‡§æ ‡§π‡•Ä ‡§Æ‡•Å‡§∏‡•ç‡§ï‡•Å‡§æ‡§∞‡§æ ‡§≤‡•á‡§§‡§æ ‡§π‡•Ç‡§Ç ‡§Æ‡•à‡§Ç,\n\t\t\t\t‡§ï‡•ç‡§Ø‡•ã‡§Ç‡§ï‡§ø ‡§ú‡§≤‡§®‡•á ‡§µ‡§æ‡§≤‡•á ‡§¨‡§π‡•Å‡§§ ‡§π‡•à‡§Ç ‡§ú‡§ø‡§Ç‡§¶‡§ó‡•Ä ‡§Æ‡•á‡§Ç",
    "‡§§‡•Ç ‡§ö‡§æ‡§π‡•á ‡§â‡§°‡§º ‡§≤‡•á ‡§Ü‡§∏‡§Æ‡§æ‡§® ‡§§‡§ï,\n\t\t\t\t‡§Æ‡•á‡§∞‡•á ‡§∏‡§æ‡§Æ‡§®‡•á ‡§∞‡§π‡§ø‡§Ø‡•ã ‡§Ö‡§™‡§®‡•Ä ‡§î‡§ï‡§æ‡§§ ‡§§‡§ï"
  ];

  @override
  Widget build(BuildContext context) {
    final controller = PageController(initialPage: initialPage, keepPage: true);
    int currentIndex = initialPage;
    return Scaffold(
      appBar: AppBar(
        backgroundColor: loAppBack,
        centerTitle: true,
        title: Text(
          "‡§Æ‡§®‡•ã‡§≠‡§æ‡§µ ‡§∂‡§æ‡§Ø‡§∞‡•Ä üëë",
          style: TextStyle(
              fontSize: 25, color: lobar, fontWeight: FontWeight.w800),
        ),
        actions: [
          IconButton(onPressed: () {}, icon: const Icon(Icons.share)),
          IconButton(
              onPressed: () {}, icon: const Icon(Icons.more_vert_outlined)),
        ],
      ),
      backgroundColor: loSBack,
      body: Stack(children: [
        Positioned(
          right: 0,
          top: -25,
          left: 0,
          child: Container(
            margin: const EdgeInsetsDirectional.fromSTEB(20, 50, 20, 50),
            decoration: BoxDecoration(
                borderRadius: BorderRadius.circular(10), color: custo),
            height: 50,
            child: const Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              crossAxisAlignment: CrossAxisAlignment.stretch,
              children: [
                Icon(Icons.fullscreen_outlined),
                Icon(Icons.refresh_outlined),
              ],
            ),
          ),
        ),
        PageView.builder(
          scrollDirection: Axis.horizontal,
          itemCount: los4.length,
          controller: controller,
          itemBuilder: (context, index) {
            return Column(
              mainAxisAlignment: MainAxisAlignment.center,
              crossAxisAlignment: CrossAxisAlignment.stretch,
              children: [
                SizedBox(
                  height: 450,
                  child: Card(
                      color: locard,
                      margin: const EdgeInsetsDirectional.fromSTEB(20, 60, 20, 0),
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                        crossAxisAlignment: CrossAxisAlignment.stretch,
                        children: [
                          Expanded(
                            child: Container(
                              margin: const EdgeInsetsDirectional.fromSTEB(
                                  20, 20, 20, 20),
                              decoration: BoxDecoration(
                                borderRadius: BorderRadius.circular(30),
                                color: loBodr,
                              ),
                              child: ListTile(
                                title: Center(
                                    child: Text(
                                      los4[index],
                                      overflow: TextOverflow.clip,
                                      style: const TextStyle(
                                          fontSize: 20,
                                          fontWeight: FontWeight.w600,
                                          color: Colors.brown),
                                    )),
                                mouseCursor: MouseCursor.defer,
                                hoverColor: hover,
                                focusColor: focus,
                              ),
                            ),
                          ),
                        ],
                      )),
                ),
              ],
            );
          },
        ),
      ]),
      bottomNavigationBar: Container(
        height: 50,
        margin: const EdgeInsetsDirectional.fromSTEB(20, 0, 20, 20),
        decoration: BoxDecoration(
          borderRadius: BorderRadius.circular(10),
          color: custo,
        ),
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceEvenly,
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            SizedBox(
              height: 90,
              child: Material(
                  color: Colors.transparent,
                  child: GestureDetector(
                      onTap: () {
                        FlutterClipboard.copy(los4[currentIndex]).then((value) {
                          Fluttertoast.showToast(
                              msg: "copied",
                              toastLength: Toast.LENGTH_SHORT,
                              gravity: ToastGravity.CENTER,
                              timeInSecForIosWeb: 1,
                              backgroundColor: Colors.red,
                              textColor: Colors.white,
                              fontSize: 16.0);
                        });
                      },
                      child: const Icon(Icons.copy_all_rounded))),
            ),
            IconButton(
                onPressed: () {
                  controller.previousPage(
                      duration: const Duration(seconds: 1),
                      curve: Curves.easeInOut);
                },
                icon: const Icon(Icons.keyboard_double_arrow_left)),
            IconButton(
                onPressed: () {
                  Get.to(shyriEdit(
                      editShayari: los4[initialPage].toString(),
                      index: initialPage));
                },
                icon: const Icon(Icons.edit_off)),
            IconButton(
                onPressed: () {
                  controller.nextPage(
                      duration: const Duration(seconds: 1),
                      curve: Curves.easeInOut);
                },
                icon: const Icon(Icons.keyboard_double_arrow_right)),
            IconButton(
                onPressed: () {
                  Share.share(los4[currentIndex]);
                },
                icon: const Icon(Icons.share)),
          ],
        ),
      ),
    );
  }
}

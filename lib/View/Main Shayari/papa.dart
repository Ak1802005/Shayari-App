import 'package:clipboard/clipboard.dart';
import 'package:flutter/material.dart';
import 'package:fluttertoast/fluttertoast.dart';
import 'package:get/get.dart';
import 'package:share_plus/share_plus.dart';
import 'package:shayari/View/shyriEdit.dart';

import '../../Model/color.dart';


// ignore: must_be_immutable, camel_case_types
class Papa extends StatelessWidget with color {
  Papa({super.key, required this.initialPage});

  final int initialPage;

  List<String> los4 = [
    "рдЙрдирдХреА рдореБрд╕реНрдХрд╛рди рд╕реЗ рд╕рд╡рд░ рдЬрд╛рддрд┐ рд╣реИ рддрдмрд┐рдпрдд рдореЗрд░реА,\n\t\t\t\tрдореЗрд░реЗ рдкрд╛рдкрд╛ рд╣рд╕рдХрд░ рдореЗрд░реА рддрдХрд▓реАрдл рдХрдо рдХрд░ рджреЗрддреЗ рд╣реИ..!!!",
    "рд╕рдлрд░ рд╕реБрд╣рд╛рдирд╛ рдХрд░рддреЗ рд╡реЛ рдореЗрд░реА рдорд╛рдВ рд╣реИ,\n\t\t\t\tрдФрд░ рдЬреЛ рд╣рд░ рд╕рдлрд░ рдЖрд╕рд╛рди рдХрд░рддреЗ рд╡реЛ рдореЗрд░реЗ рдкрд╛рдкрд╛ рд╣реИ..!!!",
    "рдмрд┐рдирд╛ рдЙрд╕рдХреЗ рдирд╛ рдПрдХ рдкрд▓ рднреА рдЧрдВрд╡рд╛рд░рд╛ рд╣реИ\n\t\t\t\tрдкрд┐рддрд╛ рд╣реА рд╕рд╛рдереА рд╣реИ, рдкрд┐рддрд╛ рд╣реА рд╕рд╣рд╛рд░рд╛ рд╣реИред",
    "рдХреЛрдИ рдмрд╛рдк рдЧреБрд╕реНрд╕реЗ рдореЗрдВ рдмреЗрдЯреЗ рд╕реЗ рдХреБрдЫ рднреА рдмреЛрд▓ рджреЗ,\n\t\t\t\tрдкрд░ рд╡реЛ рдЕрдкрдиреЗ рдмреЗрдЯреЗ рд╕реЗ рдмрд╣реБрдд рдкреНрдпрд╛рд░ рдХрд░рддрд╛ рд╣реИ..!!!",
    "рдкрд╛рдВрд╡ рдЬрд▓рдиреЗ рд▓рдЧреЗ рдЬрдм рдЬрд┐рдВрджрдЧреА рдХреА рд░рд╛рд╣реЛрдВ рдкрд░,\n\t\t\t\tрдЖрдкрдХреЛ рд╣рдереЗрд▓рд┐рдпрд╛рдВ рдпрд╛рдж рдЖрдИ рд╣реЛрдВрдЧреА рдЕрдкрдиреЗ рдкрд╛рдкрд╛ рдХреА..!!!",
    "рдЬрд╛рдирд╛ рд╣реА рдЫреЛрдбрд╝ рджреЗрдВрдЧреЗ рдЙрди рд░рд╛рд╕реНрддреЛрдВ рдкрд░,\n\t\t\t\tрдЬрд╣рд╛рдВ рдорд╛рдВ рдмрд╛рдк рдХреА рдЗрдЬреНрдЬрдд рдЦрд░рд╛рдм рд╣реЛ..!!!",
    "рдкрд╛рдкрд╛ рдХрднреА рдбрд╛рдВрдЯреЗ рддреЛ рд╕рд░ рдЭреБрдХрд╛ рд▓реЗрдирд╛,\n\t\t\t\tрдкрд░ рдЙрдиреНрд╣реЗрдВ рдХрднреА рдЖрдВрдЦреЗ рдордд рджрд┐рдЦрд╛рдирд╛,\nрдЬрд┐рд╕ рдмрд╛рдк рдиреЗ рддреБрдореНрд╣реЗ рдЗрддрдирд╛ рдмрдбрд╝рд╛ рдХрд┐рдпрд╛,\n\t\t\t\tрдЙрдиреНрд╣реЗ рдЬреАрдиреЗ рдХрд╛ рддрд░реАрдХрд╛ рдХрднреА рдордд рд╕рд┐рдЦрд╛рдирд╛..!!!",
    "рдХрдВрдзреЗ рдкрд░ рдЭреБрд▓рд╛рдпрд╛, рдХрдВрдзреЗ рдкрд░ рдШреБрдорд╛рдпрд╛,\n\t\t\t\tрдкрд╛рдкрд╛ рдХреА рдмрджреМрд▓рдд рд╣реА рдореЗрд░рд╛ рдЬреАрд╡рди рдЦреВрдмрд╕реВрд░рдд рдмрди рдкрд╛рдпрд╛.!!!",
    "рдорд╛рдВ рдмрд╛рдк рдХрд╛ рджрд┐рд▓ рдЬреАрдд рд▓реЛ рдХрдорд┐рдпрд╛рдм рд╣реЛ рдЬрд╛рдУ,\n\t\t\t\tрд╡рд░рдирд╛ рд╕рд╛рд░реА рджреБрдирд┐рдпрд╛рдВ рдЬреАрдд рдХрд░ рднреА рд╣рд╛рд░ рдЬрд╛рдУрдЧреЗ..!!!",
    "рджрд┐рди рд░рд╛рдд рдореЗрд╣рдирдд рдХрд░реА рдЙрд╕рдиреЗ рдореЗрд░реЗ рд▓рд┐рдП,\n\t\t\t\tрдХрднреА рдлрд┐рдХреНрд░ рдирд╣реАрдВ рдХрд┐рдпрд╛ рдЙрд╕рдиреЗ рд╕реВрд░рдЬ рдХреЗ рддрд╛рдк рдХрд╛,\nрдЗрд╕ рджреБрдирд┐рдпрд╛ рдореЗрдВ рд╕рдмрдХрд╛ рд╕рд╛рде рдЫреВрдЯ рдЬрд╛рдП,\n\t\t\t\tрдкрд░ рдХрднреА рд╕рд╛рде рдирд╣реА рдЫреВрдЯрдирд╛ рдЪрд╛рд╣рд┐рдП рдЕрдкрдиреЗ рдмрд╛рдк рдХрд╛тАж!!!",
    "рдЦреБрд╢реА рдХрд╛ рд╣рд░ рд▓рдореНрд╣рд╛ рдкрд╛рд╕ рд╣реЛрддрд╛ рд╣реИ,\n\t\t\t\tрдЬрдм рдорд╛рдВ рдмрд╛рдк рдХрд╛ рд╕рд╛рде рд╣реЛрддрд╛ рд╣реИтАж!!!",
    "рдХреБрдЫ рднреА рд╕рд╣рдирд╛ рдирд╣реА рдЖрддрд╛,\n\t\t\t\tрдХреБрдЫ рднреА рдХрд╣рдирд╛ рдирд╣реА рдЖрдпрд╛,\nрдореБрдЭреЗ рдкрд╛рдкрд╛ рддреБрдореНрд╣рд╛рд░реЗ рдмрд┐рди,\n\t\t\t\tрдЕрднреА рд░рд╣рдирд╛ рдирд╣реА рдЖрдЧтАж!!!"
  ];

  @override
  Widget build(BuildContext context) {
    final controller = PageController(initialPage: initialPage, keepPage: true);
    int currentIndex = initialPage;
    return Scaffold(
      appBar: AppBar(
        backgroundColor: loAppBack,
        centerTitle: true,
        title: Text(
          "рдкрд╛рдкрд╛ рд╢рд╛рдпрд░реА ЁЯзФЁЯП╗",
          style: TextStyle(
              fontSize: 25, color: lobar, fontWeight: FontWeight.w800),
        ),
        actions: [
          IconButton(onPressed: () {}, icon: const Icon(Icons.share)),
          IconButton(
              onPressed: () {}, icon: const Icon(Icons.more_vert_outlined)),
        ],
      ),
      backgroundColor: loSBack,
      body: Stack(children: [
        Positioned(
          right: 0,
          top: -25,
          left: 0,
          child: Container(
            margin: const EdgeInsetsDirectional.fromSTEB(20, 50, 20, 50),
            decoration: BoxDecoration(
                borderRadius: BorderRadius.circular(10), color: custo),
            height: 50,
            child: const Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              crossAxisAlignment: CrossAxisAlignment.stretch,
              children: [
                Icon(Icons.fullscreen_outlined),
                Icon(Icons.refresh_outlined),
              ],
            ),
          ),
        ),
        PageView.builder(
          scrollDirection: Axis.horizontal,
          itemCount: los4.length,
          controller: controller,
          itemBuilder: (context, index) {
            return Column(
              mainAxisAlignment: MainAxisAlignment.center,
              crossAxisAlignment: CrossAxisAlignment.stretch,
              children: [
                SizedBox(
                  height: 450,
                  child: Card(
                      color: locard,
                      margin: const EdgeInsetsDirectional.fromSTEB(20, 60, 20, 0),
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                        crossAxisAlignment: CrossAxisAlignment.stretch,
                        children: [
                          Expanded(
                            child: Container(
                              margin: const EdgeInsetsDirectional.fromSTEB(
                                  20, 20, 20, 20),
                              decoration: BoxDecoration(
                                borderRadius: BorderRadius.circular(30),
                                color: loBodr,
                              ),
                              child: ListTile(
                                title: Center(
                                    child: Text(
                                      los4[index],
                                      overflow: TextOverflow.clip,
                                      style: const TextStyle(
                                          fontSize: 20,
                                          fontWeight: FontWeight.w600,
                                          color: Colors.brown),
                                    )),
                                mouseCursor: MouseCursor.defer,
                                hoverColor: hover,
                                focusColor: focus,
                              ),
                            ),
                          ),
                        ],
                      )),
                ),
              ],
            );
          },
        ),
      ]),
      bottomNavigationBar: Container(
        height: 50,
        margin: const EdgeInsetsDirectional.fromSTEB(20, 0, 20, 20),
        decoration: BoxDecoration(
          borderRadius: BorderRadius.circular(10),
          color: custo,
        ),
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceEvenly,
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            SizedBox(
              height: 90,
              child: Material(
                  color: Colors.transparent,
                  child: GestureDetector(
                      onTap: () {
                        FlutterClipboard.copy(los4[currentIndex]).then((value) {
                          Fluttertoast.showToast(
                              msg: "copied",
                              toastLength: Toast.LENGTH_SHORT,
                              gravity: ToastGravity.CENTER,
                              timeInSecForIosWeb: 1,
                              backgroundColor: Colors.red,
                              textColor: Colors.white,
                              fontSize: 16.0);
                        });
                      },
                      child: const Icon(Icons.copy_all_rounded))),
            ),
            IconButton(
                onPressed: () {
                  controller.previousPage(
                      duration: const Duration(seconds: 1),
                      curve: Curves.easeInOut);
                },
                icon: const Icon(Icons.keyboard_double_arrow_left)),
            IconButton(
                onPressed: () {
                  Get.to(shyriEdit(
                      editShayari: los4[initialPage].toString(),
                      index: initialPage));
                },
                icon: const Icon(Icons.edit_off)),
            IconButton(
                onPressed: () {
                  controller.nextPage(
                      duration: const Duration(seconds: 1),
                      curve: Curves.easeInOut);
                },
                icon: const Icon(Icons.keyboard_double_arrow_right)),
            IconButton(
                onPressed: () {
                  Share.share(los4[currentIndex]);
                },
                icon: const Icon(Icons.share)),
          ],
        ),
      ),
    );
  }
}

import 'package:clipboard/clipboard.dart';
import 'package:flutter/material.dart';
import 'package:fluttertoast/fluttertoast.dart';
import 'package:get/get.dart';
import 'package:share_plus/share_plus.dart';
import 'package:shayari/View/shyriEdit.dart';

import '../../Model/color.dart';


// ignore: must_be_immutable, camel_case_types
class Ma extends StatelessWidget with color {
  Ma({super.key, required this.initialPage});

  final int initialPage;

  List<String> los4 = [
    "‡§Æ‡•á‡§∞‡•Ä ‡§§‡§ï‡§¶‡•Ä‡§∞ ‡§Æ‡•á‡§Ç ‡§ï‡§≠‡•Ä ‡§ï‡•ã‡§à ‡§ó‡§Æ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã‡§§‡§æ,\n\t\t\t\t‡§Ö‡§ó‡§∞ ‡§§‡•ò‡§¶‡•Ä‡§∞ ‡§≤‡§ø‡§ñ‡§®‡•á ‡§ï‡§æ ‡§π‡§ï ‡§Æ‡•á‡§∞‡•Ä ‡§Æ‡§æ‡§Å ‡§ï‡•ã ‡§π‡•ã‡§§‡§æ!",
    "‡§Æ‡•á‡§∞‡•Ä ‡§Æ‡§æ‡§Å ‡§Ü‡§ú ‡§≠‡•Ä ‡§Ö‡§®‡§™‡•ù ‡§π‡•Ä ‡§π‡•à,\n\t\t\t\t‡§∞‡•ã‡§ü‡•Ä ‡§è‡§ï ‡§Æ‡§æ‡§Å‡§ó‡§§‡§æ ‡§π‡•Ç‡§Å ‡§≤‡§æ‡§ï‡§∞ ‡§¶‡•ã ‡§¶‡•á‡§§‡•Ä ‡§π‡•à!",
    "‡§ï‡•å‡§® ‡§∏‡•Ä ‡§π‡•à ‡§µ‡•ã ‡§ö‡•Ä‡•õ ‡§ú‡•ã ‡§Ø‡§π‡§æ‡§Å ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡§§‡•Ä,\n\t\t\t\t‡§∏‡§¨ ‡§ï‡•Å‡§õ ‡§Æ‡§ø‡§≤ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à ‡§™‡§∞ ‡§Æ‡§æ‡§Å ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡§§‡•Ä!",
    "‡§π‡§∞ ‡§ó‡§≤‡•Ä, ‡§π‡§∞ ‡§∂‡§π‡§∞, ‡§π‡§∞ ‡§¶‡•á‡§∂-‡§µ‡§ø‡§¶‡•á‡§∂ ‡§¶‡•á‡§ñ‡§æ,\n\t\t\t\t‡§≤‡•á‡§ï‡§ø‡§® ‡§Æ‡§æ‡§Å ‡§§‡•á‡§∞‡•á ‡§ú‡•à‡§∏‡§æ ‡§™‡•ç‡§Ø‡§æ‡§∞ ‡§ï‡§π‡•Ä‡§Ç ‡§®‡§π‡•Ä‡§Ç ‡§¶‡•á‡§ñ‡§æ!",
    "‡§≤‡§¨‡•ã‡§Ç ‡§™‡•á ‡§â‡§∏‡§ï‡•á ‡§ï‡§≠‡•Ä ‡§¨‡§¶‡•Å‡§Ü ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã‡§§‡•Ä,\n\t\t\t\t‡§è‡§ï ‡§Æ‡§æ‡§Å ‡§π‡•Ä ‡§π‡•à ‡§ú‡•ã ‡§π‡§Æ‡§∏‡•á ‡§ï‡§≠‡•Ä ‡§ñ‡§´‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã‡§§‡•Ä!",
    "‡§™‡§π‡§æ‡•ú‡•ã ‡§ú‡•à‡§∏‡•á ‡§∏‡§¶‡§Æ‡•á ‡§ù‡•á‡§≤‡§§‡•Ä ‡§π‡•à ‡§â‡§Æ‡•ç‡§∞ ‡§≠‡§∞ ‡§≤‡•á‡§ï‡§ø‡§®,\n\t\t\t\t‡§á‡§ï ‡§î‡§≤‡§æ‡§¶ ‡§ï‡•Ä ‡§§‡§ï‡§≤‡•Ä‡§´ ‡§∏‡•á ‡§Æ‡§æ‡§Å ‡§ü‡•Ç‡§ü ‡§ú‡§æ‡§§‡•Ä ‡§π‡•à!",
    "‡§Æ‡§æ‡§Å ‡§π‡§Æ‡•á‡§Ç ‡§Ö‡§ö‡•ç‡§õ‡•Ä ‡§ú‡§ø‡§Ç‡§¶‡§ó‡•Ä ‡§ú‡•Ä‡§®‡•á ‡§ï‡•Ä ‡§∞‡§æ‡§π ‡§¨‡§§‡§æ‡§§‡•Ä ‡§π‡•à,\n\t\t\t\t‡§î‡§∞ ‡§Æ‡§æ‡§Å ‡§ï‡•á ‡§¨‡§ø‡§®‡§æ ‡§ú‡•Ä‡§µ‡§® ‡§®‡•Ä‡§∞‡§∏ ‡§π‡•ã ‡§ú‡§æ‡§§‡§æ ‡§π‡•à,\n‡§Æ‡§æ‡§Å ‡§ï‡•á ‡§¨‡§ø‡§®‡§æ ‡§á‡§∏ ‡§∏‡§æ‡§∞‡•Ä ‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§ï‡•Ä ‡§ï‡§≤‡•ç‡§™‡§®‡§æ ‡§ï‡§∞‡§®‡§æ ‡§≠‡•Ä ‡§Æ‡•Å‡§∂‡•ç‡§ï‡§ø‡§≤ ‡§π‡•à!",
    "‡§Æ‡§Æ‡§§‡§æ ‡§ï‡•á ‡§∏‡§æ‡§ó‡§∞ ‡§∏‡•á ‡§≠‡§∞‡•Ä ‡§π‡•à ‡§µ‡•ã ‡§Æ‡§æ‡§Å ‡§ï‡•Ä ‡§Æ‡•Ç‡§∞‡§§,\n\t\t\t\t‡§â‡§∏‡§ï‡•á ‡§∏‡§æ‡§• ‡§π‡§∞ ‡§ö‡•Ä‡•õ ‡§π‡•ã‡§§‡•Ä ‡§π‡•à ‡§ñ‡•Å‡§¨‡§∏‡•Ç‡§∞‡§§!",
    "‡§™‡§ø‡§§‡§æ ‡§π‡§Æ‡•á‡§∂‡§æ ‡§®‡§ø‡§Æ ‡§ï‡•á ‡§™‡•á‡•ú ‡§ú‡•à‡§∏‡§æ ‡§π‡•ã‡§§‡§æ ‡§π‡•à,\n\t\t\t\t‡§ú‡§ø‡§∏‡§ï‡•á ‡§™‡§§‡•ç‡§§‡•á ‡§≠‡§≤‡•á ‡§π‡•Ä ‡§ï‡§°‡§µ‡•á ‡§π‡•ã ‡§™‡§∞ ‡§µ‡§π ‡§õ‡§æ‡§Ø‡§æ ‡§π‡§Æ‡•á‡§∂‡§æ ‡§†‡§Ç‡§°‡•Ä ‡§¶‡•á‡§§‡§æ ‡§π‡•à!",
    "‡§Æ‡§æ‡§Ç ‡§§‡•ã ‡§Æ‡§æ‡§Ç ‡§π‡•ã‡§§‡•Ä ‡§π‡•à, ‡§ú‡•ã ‡§ú‡§æ‡§®‡§§‡•Ä ‡§π‡•à,\n\t\t\t\t‡§Ü‡§Ç‡§ñ‡•á ‡§∏‡•ã‡§®‡•á ‡§∏‡•á ‡§≤‡§æ‡§≤ ‡§π‡•Å‡§à ‡§π‡•à, ‡§Ø‡§æ ‡§∞‡•ã‡§®‡•á ‡§∏‡•á..!!!",
    "‡§Æ‡•á‡§∞‡•Ä ‡§¨‡§∏ ‡§á‡§§‡§®‡•Ä ‡§∏‡•Ä ‡§ï‡§π‡§æ‡§®‡•Ä ‡§π‡•à,\n\t\t\t\t‡§¨‡§æ‡§™ ‡§Æ‡•á‡§∞‡§æ ‡§∞‡§æ‡§ú‡§æ ‡§π‡•à ‡§î‡§∞ ‡§Æ‡§æ‡§Ç ‡§Æ‡•á‡§∞‡•Ä ‡§∞‡§æ‡§®‡•Ä ‡§π‡•à..!!!",
    "‡§è‡§ï ‡§Ö‡§ö‡•ç‡§õ‡•Ä ‡§Æ‡§æ‡§Ç ‡§§‡•ã ‡§π‡§∞ ‡§¨‡•á‡§ü‡•á ‡§ï‡•á ‡§™‡§æ‡§∏ ‡§π‡•ã‡§§‡•Ä ‡§π‡•à,\n\t\t\t\t‡§™‡§∞ ‡§è‡§ï ‡§Ö‡§ö‡•ç‡§õ‡§æ ‡§¨‡•á‡§ü‡§æ ‡§π‡§∞ ‡§Æ‡§æ‡§Ç ‡§ï‡•á ‡§™‡§æ‡§∏ ‡§®‡§π‡•Ä ‡§π‡•ã‡§§‡§æ..!!!"
  ];

  @override
  Widget build(BuildContext context) {
    final controller = PageController(initialPage: initialPage, keepPage: true);
    int currentIndex = initialPage;
    return Scaffold(
      appBar: AppBar(
        backgroundColor: loAppBack,
        centerTitle: true,
        title: Text(
          "‡§¶‡•ã‡§∏‡•ç‡§§‡•Ä ‡§∂‡§æ‡§Ø‡§∞‡•Ä ü§ù",
          style: TextStyle(
              fontSize: 25, color: lobar, fontWeight: FontWeight.w800),
        ),
        actions: [
          IconButton(onPressed: () {}, icon: const Icon(Icons.share)),
          IconButton(
              onPressed: () {}, icon: const Icon(Icons.more_vert_outlined)),
        ],
      ),
      backgroundColor: loSBack,
      body: Stack(children: [
        Positioned(
          right: 0,
          top: -25,
          left: 0,
          child: Container(
            margin: const EdgeInsetsDirectional.fromSTEB(20, 50, 20, 50),
            decoration: BoxDecoration(
                borderRadius: BorderRadius.circular(10), color: custo),
            height: 50,
            child: const Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              crossAxisAlignment: CrossAxisAlignment.stretch,
              children: [
                Icon(Icons.fullscreen_outlined),
                Icon(Icons.refresh_outlined),
              ],
            ),
          ),
        ),
        PageView.builder(
          scrollDirection: Axis.horizontal,
          itemCount: los4.length,
          controller: controller,
          itemBuilder: (context, index) {
            return Column(
              mainAxisAlignment: MainAxisAlignment.center,
              crossAxisAlignment: CrossAxisAlignment.stretch,
              children: [
                SizedBox(
                  height: 450,
                  child: Card(
                      color: locard,
                      margin: const EdgeInsetsDirectional.fromSTEB(20, 60, 20, 0),
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                        crossAxisAlignment: CrossAxisAlignment.stretch,
                        children: [
                          Expanded(
                            child: Container(
                              margin: const EdgeInsetsDirectional.fromSTEB(
                                  20, 20, 20, 20),
                              decoration: BoxDecoration(
                                borderRadius: BorderRadius.circular(30),
                                color: loBodr,
                              ),
                              child: ListTile(
                                title: Center(
                                    child: Text(
                                      los4[index],
                                      overflow: TextOverflow.clip,
                                      style: const TextStyle(
                                          fontSize: 20,
                                          fontWeight: FontWeight.w600,
                                          color: Colors.brown),
                                    )),
                                mouseCursor: MouseCursor.defer,
                                hoverColor: hover,
                                focusColor: focus,
                              ),
                            ),
                          ),
                        ],
                      )),
                ),
              ],
            );
          },
        ),
      ]),
      bottomNavigationBar: Container(
        height: 50,
        margin: const EdgeInsetsDirectional.fromSTEB(20, 0, 20, 20),
        decoration: BoxDecoration(
          borderRadius: BorderRadius.circular(10),
          color: custo,
        ),
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceEvenly,
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            SizedBox(
              height: 90,
              child: Material(
                  color: Colors.transparent,
                  child: GestureDetector(
                      onTap: () {
                        FlutterClipboard.copy(los4[currentIndex]).then((value) {
                          Fluttertoast.showToast(
                              msg: "copied",
                              toastLength: Toast.LENGTH_SHORT,
                              gravity: ToastGravity.CENTER,
                              timeInSecForIosWeb: 1,
                              backgroundColor: Colors.red,
                              textColor: Colors.white,
                              fontSize: 16.0);
                        });
                      },
                      child: const Icon(Icons.copy_all_rounded))),
            ),
            IconButton(
                onPressed: () {
                  controller.previousPage(
                      duration: const Duration(seconds: 1),
                      curve: Curves.easeInOut);
                },
                icon: const Icon(Icons.keyboard_double_arrow_left)),
            IconButton(
                onPressed: () {
                  Get.to(shyriEdit(
                      editShayari: los4[initialPage].toString(),
                      index: initialPage));
                },
                icon: const Icon(Icons.edit_off)),
            IconButton(
                onPressed: () {
                  controller.nextPage(
                      duration: const Duration(seconds: 1),
                      curve: Curves.easeInOut);
                },
                icon: const Icon(Icons.keyboard_double_arrow_right)),
            IconButton(
                onPressed: () {
                  Share.share(los4[currentIndex]);
                },
                icon: const Icon(Icons.share)),
          ],
        ),
      ),
    );
  }
}

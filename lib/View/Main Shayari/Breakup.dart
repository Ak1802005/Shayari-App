import 'package:clipboard/clipboard.dart';
import 'package:flutter/material.dart';
import 'package:fluttertoast/fluttertoast.dart';
import 'package:get/get.dart';
import 'package:share_plus/share_plus.dart';
import 'package:shayari/View/shyriEdit.dart';

import '../../Model/color.dart';


// ignore: must_be_immutable, camel_case_types
class BreakUp extends StatelessWidget with color {
  BreakUp({super.key, required this.initialPage});

  final int initialPage;

  List<String> los4 = [
    "‡§Æ‡•ã‡§π‡§¨‡•ç‡§¨‡§§ ‡§ï‡§ø‡§§‡§®‡•Ä ‡§≠‡•Ä ‡§∏‡§ö‡•ç‡§ö‡•Ä ‡§ï‡§∞‡§≤‡•ã,\n\t\t\t\t‡§≤‡•ã‡§ó‡•ã‡§Ç ‡§ï‡•ã ‡§∏‡§ö‡•ç‡§ö‡•Ä ‡§Æ‡•ã‡§π‡§¨‡•ç‡§¨‡§§ ‡§µ‡§æ‡§≤‡•á ‡§®‡§π‡•Ä‡§Ç,\n‡§Ö‡§ö‡•ç‡§õ‡•á ‡§´‡•á‡§∏ ‡§µ‡§æ‡§≤‡•á ‡§π‡•Ä ‡§™‡§∏‡§Ç‡§¶ ‡§Ü‡§§‡•á ‡§π‡•à‡§Ç.",
    "‡§Æ‡•Å‡§¨‡§æ‡§∞‡§ï ‡§π‡•ã ‡§Ø‡§æ‡§∞ ‡§§‡•Å‡§Æ‡•ç‡§π‡§æ‡§∞‡•Ä ‡§≤‡§æ‡§á‡§´ ‡§Æ‡•á‡§Ç ‡§ú‡•ã ‡§∏‡§¨‡§∏‡•á ‡§¨‡§°‡§º‡§æ ‡§¶‡•Å‡§ñ ‡§•‡§æ ‡§Æ‡•à‡§Ç\n\t\t\t\t‡§µ‡§π ‡§Ü‡§ú ‡§π‡§Æ‡•á‡§∂‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ñ‡§§‡•ç‡§Æ ‡§π‡•ã ‡§ó‡§Ø‡§æ ‡§π‡•à.",
    "‡§ú‡§≤‡•ç‡§¶‡•Ä ‡§ü‡•Ç‡§ü‡§®‡•á ‡§µ‡§æ‡§≤‡•á ‡§®‡§π‡•Ä‡§Ç ‡§•‡•á ‡§π‡§Æ,\n\t\t\t\t‡§¨‡§∏ ‡§ï‡•ã‡§à ‡§Ö‡§™‡§®‡§æ ‡§¨‡§®‡§æ ‡§ï‡§∞ ‡§§‡•ã‡•ú ‡§ó‡§Ø‡§æ.",
    "‡§Æ‡•á‡§∞‡•á ‡§ó‡•Ä‡§§ ‡§∏‡•Å‡§®‡•á ‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§µ‡§æ‡§≤‡•ã‡§Ç ‡§®‡•á,\n\t\t\t\t‡§Æ‡§ó‡§∞ ‡§Æ‡•á‡§∞‡§æ ‡§¶‡§∞‡•ç‡§¶ ‡§ï‡•ã‡§à ‡§®‡§æ ‡§ú‡§æ‡§® ‡§∏‡§ï‡§æ,\n‡§è‡§ï ‡§§‡•á‡§∞‡§æ ‡§∏‡§π‡§æ‡§∞‡§æ ‡§•‡§æ ‡§¶‡§ø‡§≤ ‡§ï‡•ã ‡§™‡§∞,\n\t\t\t\t‡§§‡•Ç ‡§≠‡•Ä ‡§Æ‡•Å‡§ù‡•á ‡§®‡§æ ‡§™‡§π‡§ö‡§æ‡§® ‡§∏‡§ï‡§æ.",
    "‡§Æ‡•á‡§∞‡•Ä ‡§µ‡§´‡§æ ‡§Æ‡•Å‡§ï‡§Æ‡•ç‡§Æ‡§≤ ‡§®‡§π‡•Ä ‡§π‡•Å‡§à,\n\t\t\t\t‡§§‡•ã ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•Å‡§Ü‚Ä¶\n‡§§‡•á‡§∞‡•Ä ‡§¨‡•á‡§µ‡§´‡§æ‡§à ‡§§‡•ã ‡§Æ‡•Å‡§ï‡§Æ‡•ç‡§Æ‡§≤ ‡§π‡•ã ‡§ó‡§à.",
    "‡§§‡•Å‡§Æ‡•ç‡§π‡§æ‡§∞‡•Ä ‡§Ø‡§æ‡§¶ ‡§Æ‡•á‡§Ç ‡§ú‡•à‡§∏‡•á ‡§π‡§Æ ‡§∞‡•ã‡§§‡•á ‡§π‡•à‡§Ç,\n\t\t\t\t‡§µ‡•à‡§∏‡•á ‡§§‡•ã ‡§Ü‡§ú‡§ï‡§≤ ‡§ï‡•á ‡§≤‡•ã‡§ó ‡§ó‡§π‡§∞‡•Ä ‡§®‡•Ä‡§Ç‡§¶ ‡§Æ‡•á‡§Ç ‡§∏‡•ã‡§§‡•á ‡§π‡•à‡§Ç.",
    "‡§Ø‡•á ‡§Æ‡•ã‡§π‡§¨‡•ç‡§¨‡§§ ‡§ï‡•á ‡§π‡§æ‡§¶‡§∏‡•á ‡§Ö‡§ï‡•ç‡§∏‡§∞ ‡§¶‡§ø‡§≤‡•ã‡§Ç ‡§ï‡•ã\n\t\t\t\t‡§§‡•ã‡§°‡§º ‡§¶‡•á‡§§‡•á ‡§π‡•à‡§Ç ‡§§‡•Å‡§Æ ‡§Æ‡§Ç‡§ú‡§ø‡§≤ ‡§ï‡•Ä ‡§¨‡§æ‡§§ ‡§ï‡§∞‡§§‡•á ‡§π‡•ã\n‡§≤‡•ã‡§ó ‡§∞‡§æ‡§π‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§π‡•Ä ‡§∏‡§æ‡§• ‡§õ‡•ã‡§°‡§º ‡§¶‡•á‡§§‡•á ‡§π‡•à‡§Ç",
    "‡§∏‡•ã‡§ö‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§•‡§æ ‡§ú‡§ø‡§Ç‡§¶‡§ó‡•Ä ‡§Æ‡•á‡§Ç ‡§ê‡§∏‡•á ‡§≠‡•Ä ‡§´‡§∏‡§æ‡§®‡•á ‡§π‡•ã‡§Ç‡§ó‡•á,\n\t\t\t\t‡§∞‡•ã‡§®‡§æ ‡§≠‡•Ä ‡§ú‡§∞‡•Ç‡§∞‡•Ä ‡§π‡•ã‡§ó‡§æ ‡§î‡§∞ ‡§Ü‡§Ç‡§∏‡•Ç ‡§≠‡•Ä ‡§õ‡§ø‡§™‡§æ‡§®‡•á ‡§π‡•ã‡§Ç‡§ó‡•á‡•§",
    "‡§Æ‡§®‡§æ‡§Ø‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§ó‡§Ø‡§æ ‡§Æ‡•Å‡§ù‡§∏‡•á ‡§á‡§∏ ‡§¨‡§æ‡§∞,\n\t\t\t\t‡§â‡§∏‡§ï‡•Ä ‡§®‡§æ‡§∞‡§æ‡•õ‡§ó‡•Ä ‡§Æ‡•á‡§Ç ‡§Ü‡§¨‡§æ‡§¶ ‡§ï‡•ã‡§à ‡§î‡§∞ ‡§•‡§æ.",
    "‡§¶‡§ø‡§≤ ‡§Æ‡•á‡§Ç ‡§Ü‡§ó ‡§π‡•à ‡§™‡§∞ ‡§Ü‡§Ç‡§ñ‡•ã‡§Ç ‡§∏‡•á ‡§®‡§π‡•Ä‡§Ç ‡§Ü‡§§‡§æ,\n\t\t\t\t‡§ï‡•à‡§∏‡•á ‡§ï‡§π‡•Ç‡§Ç ‡§§‡•Å‡§Æ‡§∏‡•á ‡§ï‡§ø‡§§‡§®‡§æ ‡§™‡•ç‡§Ø‡§æ‡§∞ ‡§π‡•à,\n‡§™‡§∞ ‡§§‡•Å‡§Æ ‡§® ‡§∏‡§Æ‡§ù‡•ã ‡§§‡•ã ‡§Ø‡•á ‡§¶‡§ø‡§≤ ‡§§‡§°‡§º‡§™‡§§‡§æ ‡§∞‡§π‡•á‡§ó‡§æ,\n\t\t\t\t‡§Ö‡§¨ ‡§§‡•ã ‡§∏‡§ø‡§∞‡•ç‡§´ ‡§∞‡§æ‡§∏‡•ç‡§§‡•á ‡§™‡§∞ ‡§Ö‡§ï‡•á‡§≤‡•á ‡§ö‡§≤‡§§‡§æ ‡§ú‡§æ‡§è‡§ó‡§æ‡•§",
    "‡§ú‡•ã ‡§®‡§ú‡§∞ ‡§∏‡•á ‡§ó‡•Å‡§ú‡§∞ ‡§ú‡§æ‡§Ø‡§æ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç ‡§µ‡•ã,\n\t\t\t\t‡§∏‡§ø‡§§‡§æ‡§∞‡•á ‡§Ö‡§ï‡•ç‡§∏‡§∞ ‡§ü‡•Ç‡§ü ‡§ú‡§æ‡§Ø‡§æ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç !",
    "‡§π‡•à ‡§® ‡§Æ‡•Å‡§ù‡•á ‡§ó‡§≤‡§§ ‡§´‡§π‡§Æ‡§ø‡§Ø‡§æ‡§Ç??\n\t\t\t\t‡§§‡•Å‡§ù‡•á ‡§ú‡§¨ ‡§≠‡•Ä ‡§∏‡§Æ‡§ù‡§æ ‡§Ö‡§™‡§®‡§æ ‡§∏‡§Æ‡§ù‡§æ."
  ];

  @override
  Widget build(BuildContext context) {
    final controller = PageController(initialPage: initialPage, keepPage: true);
    int currentIndex = initialPage;
    return Scaffold(
      appBar: AppBar(
        backgroundColor: loAppBack,
        centerTitle: true,
        title: Text(
          "‡§¨‡•ç‡§∞‡•á‡§ï‡§Ö‡§™ ‡§∂‡§æ‡§Ø‡§∞‡•Ä üíî",
          style: TextStyle(
              fontSize: 25, color: lobar, fontWeight: FontWeight.w800),
        ),
        actions: [
          IconButton(onPressed: () {}, icon: const Icon(Icons.share)),
          IconButton(
              onPressed: () {}, icon: const Icon(Icons.more_vert_outlined)),
        ],
      ),
      backgroundColor: loSBack,
      body: Stack(children: [
        Positioned(
          right: 0,
          top: -25,
          left: 0,
          child: Container(
            margin: const EdgeInsetsDirectional.fromSTEB(20, 50, 20, 50),
            decoration: BoxDecoration(
                borderRadius: BorderRadius.circular(10), color: custo),
            height: 50,
            child: const Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              crossAxisAlignment: CrossAxisAlignment.stretch,
              children: [
                Icon(Icons.fullscreen_outlined),
                Icon(Icons.refresh_outlined),
              ],
            ),
          ),
        ),
        PageView.builder(
          scrollDirection: Axis.horizontal,
          itemCount: los4.length,
          controller: controller,
          itemBuilder: (context, index) {
            return Column(
              mainAxisAlignment: MainAxisAlignment.center,
              crossAxisAlignment: CrossAxisAlignment.stretch,
              children: [
                SizedBox(
                  height: 450,
                  child: Card(
                      color: locard,
                      margin: const EdgeInsetsDirectional.fromSTEB(20, 60, 20, 0),
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                        crossAxisAlignment: CrossAxisAlignment.stretch,
                        children: [
                          Expanded(
                            child: Container(
                              margin: const EdgeInsetsDirectional.fromSTEB(
                                  20, 20, 20, 20),
                              decoration: BoxDecoration(
                                borderRadius: BorderRadius.circular(30),
                                color: loBodr,
                              ),
                              child: ListTile(
                                title: Center(
                                    child: Text(
                                      los4[index],
                                      overflow: TextOverflow.clip,
                                      style: const TextStyle(
                                          fontSize: 20,
                                          fontWeight: FontWeight.w600,
                                          color: Colors.brown),
                                    )),
                                mouseCursor: MouseCursor.defer,
                                hoverColor: hover,
                                focusColor: focus,
                              ),
                            ),
                          ),
                        ],
                      )),
                ),
              ],
            );
          },
        ),
      ]),
      bottomNavigationBar: Container(
        height: 50,
        margin: const EdgeInsetsDirectional.fromSTEB(20, 0, 20, 20),
        decoration: BoxDecoration(
          borderRadius: BorderRadius.circular(10),
          color: custo,
        ),
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceEvenly,
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            SizedBox(
              height: 90,
              child: Material(
                  color: Colors.transparent,
                  child: GestureDetector(
                      onTap: () {
                        FlutterClipboard.copy(los4[currentIndex]).then((value) {
                          Fluttertoast.showToast(
                              msg: "copied",
                              toastLength: Toast.LENGTH_SHORT,
                              gravity: ToastGravity.CENTER,
                              timeInSecForIosWeb: 1,
                              backgroundColor: Colors.red,
                              textColor: Colors.white,
                              fontSize: 16.0);
                        });
                      },
                      child: const Icon(Icons.copy_all_rounded))),
            ),
            IconButton(
                onPressed: () {
                  controller.previousPage(
                      duration: const Duration(seconds: 1),
                      curve: Curves.easeInOut);
                },
                icon: const Icon(Icons.keyboard_double_arrow_left)),
            IconButton(
                onPressed: () {
                  Get.to(shyriEdit(
                      editShayari: los4[initialPage].toString(),
                      index: initialPage));
                },
                icon: const Icon(Icons.edit_off)),
            IconButton(
                onPressed: () {
                  controller.nextPage(
                      duration: const Duration(seconds: 1),
                      curve: Curves.easeInOut);
                },
                icon: const Icon(Icons.keyboard_double_arrow_right)),
            IconButton(
                onPressed: () {
                  Share.share(los4[currentIndex]);
                },
                icon: const Icon(Icons.share)),
          ],
        ),
      ),
    );
  }
}

import 'package:clipboard/clipboard.dart';
import 'package:flutter/material.dart';
import 'package:fluttertoast/fluttertoast.dart';
import 'package:get/get.dart';
import 'package:share_plus/share_plus.dart';
import 'package:shayari/View/shyriEdit.dart';
import '../../Model/color.dart';


// ignore: must_be_immutable, camel_case_types
class Soilder extends StatelessWidget with color {
  Soilder({super.key, required this.initialPage});

  final int initialPage;

  List<String> los4 = [
    "‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§∏‡•á‡§®‡§æ ‡§∏‡§ö‡•ç‡§ö‡•á ‡§Æ‡§æ‡§Ø‡§®‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§∏‡§æ‡§π‡§∏ ‡§ï‡§æ ‡§™‡•ç‡§∞‡§§‡•Ä‡§ï ‡§π‡•à\n\t\t\t\t‡§π‡§∞ ‡§¶‡§∂‡§æ-‡§π‡§∞ ‡§¶‡§ø‡§∂‡§æ ‡§Æ‡•á‡§Ç ‡§ú‡§ø‡§∏‡§ï‡•Ä ‡§π‡•ã‡§§‡•Ä ‡§ï‡•á‡§µ‡§≤ ‡§ú‡•Ä‡§§ ‡§π‡•à‚Ä¶",
    "‡§ú‡§π‡§æ‡§Å ‡§ï‡§π‡•Ä‡§Ç ‡§ñ‡§°‡§º‡§æ ‡§π‡•ã ‡§ú‡§æ‡§§‡§æ ‡§π‡•à ‡§≠‡§æ‡§∞‡§§ ‡§ï‡§æ ‡§µ‡•Ä‡§∞ ‡§∏‡§ø‡§™‡§æ‡§π‡•Ä\n\t\t\t\t‡§¶‡•Å‡§∂‡•ç‡§Æ‡§® ‡§ï‡•á ‡§ñ‡•á‡§Æ‡•á ‡§Æ‡•á‡§Ç ‡§§‡§¨ ‡§Æ‡§ö‡§®‡•á ‡§≤‡§ó‡§§‡•Ä ‡§π‡•à ‡§§‡§¨‡§æ‡§π‡•Ä‚Ä¶",
    "‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§∏‡•á‡§®‡§æ ‡§¶‡§ø‡§µ‡§∏ ‡§™‡•ç‡§∞‡§§‡•Ä‡§ï ‡§π‡•à ‡§∏‡•á‡§®‡§æ ‡§ï‡•á ‡§∏‡§Æ‡•ç‡§Æ‡§æ‡§® ‡§ï‡§æ\n\t\t\t\t‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§∏‡•á‡§®‡§æ ‡§µ‡§ø‡§∑‡§Ø ‡§¨‡§°‡§º‡§æ ‡§π‡•à, ‡§≠‡§æ‡§∞‡§§ ‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞ ‡§ï‡•Ä ‡§∂‡§æ‡§® ‡§ï‡§æ‚Ä¶",
    "‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§∏‡•á‡§®‡§æ ‡§ï‡•ã ‡§¶‡•á‡§ñ, ‡§¶‡•á‡§∂ ‡§ï‡§æ ‡§π‡§∞ ‡§ö‡•á‡§π‡§∞‡§æ ‡§ñ‡§ø‡§≤ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à\n\t\t\t\t‡§∏‡§æ‡§π‡§∏ ‡§ï‡•á ‡§∞‡§Ç‡§ó ‡§Æ‡•á‡§Ç ‡§∞‡§Ç‡§ó‡§æ ‡§π‡•Å‡§Ü, ‡§π‡§∞ ‡§ï‡•ã‡§®‡§æ ‡§ñ‡§ø‡§≤ ‡§ú‡§æ‡§§‡§æ ‡§π‡•à‚Ä¶",
    "‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§∏‡•á‡§®‡§æ ‡§¶‡§ø‡§µ‡§∏ ‡§ï‡§æ ‡§π‡§∞ ‡§≤‡§Æ‡•ç‡§π‡§æ ‡§π‡•ã ‡§ï‡•Å‡§õ ‡§ñ‡§æ‡§∏\n\t\t\t\t‡§∏‡•á‡§®‡§æ ‡§ï‡•á ‡§∏‡§æ‡§π‡§∏ ‡§ï‡§æ, ‡§π‡§∞ ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§ï‡§∞‡•á ‡§è‡§π‡§∏‡§æ‡§∏‚Ä¶",
    "‡§≠‡§æ‡§∞‡§§ ‡§ï‡•á ‡§Ø‡•Å‡§µ‡§æ‡§ì‡§Ç ‡§Æ‡•á‡§Ç ‡§π‡§Æ‡•á‡§∂‡§æ ‡§ú‡•ã‡§∂ ‡§ï‡§æ ‡§∏‡§Ç‡§ö‡§æ‡§∞ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à\n\t\t\t\t‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§∏‡•á‡§®‡§æ ‡§¶‡§ø‡§µ‡§∏ ‡§∏‡•á‡§®‡§æ ‡§ï‡•á ‡§™‡§∞‡§æ‡§ï‡•ç‡§∞‡§Æ ‡§ï‡§æ ‡§™‡•ç‡§∞‡§ö‡§æ‡§∞ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‚Ä¶",
    "‡§ú‡•à‡§∏‡•á ‡§Ö‡§ó‡•ç‡§®‡§ø ‡§ï‡•Ä ‡§≤‡§™‡§ü‡•á ‡§Æ‡§ø‡§ü‡§æ‡§§‡•Ä ‡§π‡•à ‡§Ö‡§Ç‡§ß‡§ï‡§æ‡§∞\n\t\t\t\t‡§µ‡•à‡§∏‡•á ‡§π‡•Ä ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§∏‡•á‡§®‡§æ ‡§∂‡§§‡•ç‡§∞‡•Å‡§ì‡§Ç ‡§ï‡§æ ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à ‡§∏‡§Ç‡§π‡§æ‡§∞",
      "‡§µ‡•Ä‡§∞ ‡§∞‡§∏ ‡§Æ‡•á‡§Ç ‡§ó‡§æ‡§•‡§æ‡§è‡§Ç ‡§ó‡§æ‡§®‡§æ, ‡§ú‡§¨ ‡§≠‡•Ä ‡§§‡•Å‡§Æ ‡§Æ‡§ø‡§≤‡§®‡•á ‡§Ü‡§®‡§æ\n\t\t\t\t‡§ú‡§Ø ‡§π‡§ø‡§Ç‡§¶ ‡§ï‡§π‡§®‡§æ ‡§ï‡•á‡§µ‡§≤ ‡§π‡§Ç‡§∏‡§ï‡§∞, ‡§ê ‡§µ‡•Ä‡§∞! ‡§§‡•Å‡§Æ ‡§´‡§ø‡§∞ ‡§∏‡•á ‡§Ü‡§®‡§æ‚Ä¶",
    "‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§∏‡•á‡§®‡§æ ‡§¶‡§ø‡§µ‡§∏ ‡§ï‡•á ‡§á‡§∏ ‡§Ö‡§µ‡§∏‡§∞ ‡§™‡§∞ ‡§Ü‡§ì ‡§∏‡§Ç‡§ó‡§†‡§ø‡§§ ‡§π‡•ã ‡§ú‡§æ‡§è‡§Ç\n\t\t\t\t‡§â‡§§‡•ç‡§∏‡§æ‡§π ‡§î‡§∞ ‡§â‡§Æ‡§Ç‡§ó ‡§ï‡•á ‡§∏‡§æ‡§• ‡§Ü‡§ì ‡§≠‡§æ‡§∞‡§§‡•Ä‡§Ø ‡§∏‡•á‡§®‡§æ ‡§¶‡§ø‡§µ‡§∏ ‡§Æ‡§®‡§æ‡§è‡§Ç‚Ä¶",
      "‡§µ‡•ã ‡§ú‡•ã ‡§∏‡§¨‡§∏‡•á ‡§¶‡•Ç‡§∞ ‡§π‡•à\n\t\t\t\t‡§™‡§∞ ‡§á‡§∏ ‡§¨‡§æ‡§§ ‡§ï‡§æ ‡§â‡§∏‡§ï‡•ã ‡§ó‡•Å‡§∞‡•Ç‡§∞ ‡§π‡•à\n‡§¶‡•á‡§∂‡§™‡•ç‡§∞‡•á‡§Æ ‡§ï‡§æ ‡§ï‡•ã ‡§∏‡•Å‡§∞‡•Ç‡§∞ ‡§π‡•à\n\t\t\t\t‡§µ‡•ã ‡§∏‡§ø‡§™‡§æ‡§π‡•Ä ‡§∞‡§π‡§§‡§æ ‡§¨‡§π‡•Å‡§§ ‡§¶‡•Ç‡§∞ ‡§π‡•à‡•§",
    "‡§Æ‡•à‡§¶‡§æ‡§® ‡§Æ‡•á‡§Ç ‡§ú‡§¨ ‡§ú‡§æ‡§® ‡§¨‡§® ‡§Ü‡§à\n\t\t\t\t‡§§‡§¨ ‡§ú‡§æ‡§ï‡§∞ ‡§â‡§∏‡§Æ‡•á ‡§π‡§ø‡§Æ‡•ç‡§Æ‡§§ ‡§Ü‡§à\n‡§µ‡§π‡•Ä ‡§∏‡§ø‡§™‡§æ‡§π‡•Ä ‡§π‡•à ‡§Ø‡•á ‡§ú‡§ø‡§®‡•ç‡§π‡•ã‡§Ç‡§®‡•á\n\t\t\t\t‡§≠‡§æ‡§∞‡§§ ‡§Æ‡§æ‡§Ç ‡§ï‡•ã ‡§Ü‡§ú‡§æ‡§¶‡•Ä ‡§¶‡§ø‡§≤‡§æ‡§à ‡•§",
    "‡§è‡§ï ‡§µ‡•Ä‡§∞ ‡§π‡•à ‡§µ‡•ã\n\t\t\t\t‡§è‡§ï ‡§ß‡•Ä‡§∞ ‡§π‡•à ‡§µ‡•ã\n‡§ï‡•ã‡§à ‡§≠‡•Ä ‡§∏‡§ø‡§™‡§æ‡§π‡•Ä ‡§ï‡•ã ‡§®‡§æ  ‡§∞‡•ã‡§ï ‡§™‡§æ‡§è\n\t\t\t\t‡§ö‡§æ‡§π‡•á ‡§ú‡§Ç‡§ú‡•Ä‡§∞ ‡§π‡•á ‡§µ‡•ã ‡•§"
  ];

  @override
  Widget build(BuildContext context) {
    final controller = PageController(initialPage: initialPage, keepPage: true);
    int currentIndex = initialPage;
    return Scaffold(
      appBar: AppBar(
        backgroundColor: loAppBack,
        centerTitle: true,
        title: Text(
          "‡§∏‡•à‡§®‡§ø‡§ï ‡§∂‡§æ‡§Ø‡§∞‡•Ä ü´°",
          style: TextStyle(
              fontSize: 25, color: lobar, fontWeight: FontWeight.w800),
        ),
        actions: [
          IconButton(onPressed: () {}, icon: const Icon(Icons.share)),
          IconButton(
              onPressed: () {}, icon: const Icon(Icons.more_vert_outlined)),
        ],
      ),
      backgroundColor: loSBack,
      body: Stack(children: [
        Positioned(
          right: 0,
          top: -25,
          left: 0,
          child: Container(
            margin: const EdgeInsetsDirectional.fromSTEB(20, 50, 20, 50),
            decoration: BoxDecoration(
                borderRadius: BorderRadius.circular(10), color: custo),
            height: 50,
            child: const Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              crossAxisAlignment: CrossAxisAlignment.stretch,
              children: [
                Icon(Icons.fullscreen_outlined),
                Icon(Icons.refresh_outlined),
              ],
            ),
          ),
        ),
        PageView.builder(
          scrollDirection: Axis.horizontal,
          itemCount: los4.length,
          controller: controller,
          itemBuilder: (context, index) {
            return Column(
              mainAxisAlignment: MainAxisAlignment.center,
              crossAxisAlignment: CrossAxisAlignment.stretch,
              children: [
                SizedBox(
                  height: 450,
                  child: Card(
                      color: locard,
                      margin: const EdgeInsetsDirectional.fromSTEB(20, 60, 20, 0),
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                        crossAxisAlignment: CrossAxisAlignment.stretch,
                        children: [
                          Expanded(
                            child: Container(
                              margin: const EdgeInsetsDirectional.fromSTEB(
                                  20, 20, 20, 20),
                              decoration: BoxDecoration(
                                borderRadius: BorderRadius.circular(30),
                                color: loBodr,
                              ),
                              child: ListTile(
                                title: Center(
                                    child: Text(
                                      los4[index],
                                      overflow: TextOverflow.clip,
                                      style: const TextStyle(
                                          fontSize: 20,
                                          fontWeight: FontWeight.w600,
                                          color: Colors.brown),
                                    )),
                                mouseCursor: MouseCursor.defer,
                                hoverColor: hover,
                                focusColor: focus,
                              ),
                            ),
                          ),
                        ],
                      )),
                ),
              ],
            );
          },
        ),
      ]),
      bottomNavigationBar: Container(
        height: 50,
        margin: const EdgeInsetsDirectional.fromSTEB(20, 0, 20, 20),
        decoration: BoxDecoration(
          borderRadius: BorderRadius.circular(10),
          color: custo,
        ),
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceEvenly,
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            SizedBox(
              height: 90,
              child: Material(
                  color: Colors.transparent,
                  child: GestureDetector(
                      onTap: () {
                        FlutterClipboard.copy(los4[currentIndex]).then((value) {
                          Fluttertoast.showToast(
                              msg: "copied",
                              toastLength: Toast.LENGTH_SHORT,
                              gravity: ToastGravity.CENTER,
                              timeInSecForIosWeb: 1,
                              backgroundColor: Colors.red,
                              textColor: Colors.white,
                              fontSize: 16.0);
                        });
                      },
                      child: const Icon(Icons.copy_all_rounded))),
            ),
            IconButton(
                onPressed: () {
                  controller.previousPage(
                      duration: const Duration(seconds: 1),
                      curve: Curves.easeInOut);
                },
                icon: const Icon(Icons.keyboard_double_arrow_left)),
            IconButton(
                onPressed: () {
                  Get.to(shyriEdit(
                      editShayari: los4[initialPage].toString(),
                      index: initialPage));
                },
                icon: const Icon(Icons.edit_off)),
            IconButton(
                onPressed: () {
                  controller.nextPage(
                      duration: const Duration(seconds: 1),
                      curve: Curves.easeInOut);
                },
                icon: const Icon(Icons.keyboard_double_arrow_right)),
            IconButton(
                onPressed: () {
                  Share.share(los4[currentIndex]);
                },
                icon: const Icon(Icons.share)),
          ],
        ),
      ),
    );
  }
}
